# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Nomeroff Net CI CPU Testing

on:
  push:
    branches: [ v3.0 ]
  pull_request:
    branches: [ v3.0 ]
#  schedule:
#    - cron: '0 0 * * *'  # Runs at 00:00 UTC every day

jobs:
  cpu-tests:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]

    # Timeout: https://stackoverflow.com/a/59076067/4521646
    timeout-minutes: 120

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # Note: This uses an internal pip API and may not always work
    # https://github.com/actions/cache/blob/master/examples.md#multiple-oss-in-a-workflow
    - name: Get pip cache
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - name: Cache pip
      uses: actions/cache@v2.1.7
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -qr requirements.txt -f https://download.pytorch.org/whl/cpu/torch_stable.html
        pip install -q jupyter  # wandb  # extras
        python --version
        pip --version
        pip list
      shell: bash

    - name: Tests workflow
      run: |
          # test python examples
          python examples/py/get-started-demo.py
          python examples/py/get-started-tiny-demo.py
          python examples/py/number-plate-filling-demo.py
          python examples/py/number-plate-recognition-multiline-demo.py

          # test jupyter examples
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html examples/custom-options-model-demo.ipynb
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html examples/get-started-demo.ipynb
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html examples/get-started-tiny-demo.ipynb
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html examples/number-plate-bbox-filling.ipynb
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html examples/number-plate-keypoints-filling.ipynb
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html examples/number-plate-recognition-multiline-demo.ipynb

          # test python benchmarks
          python benchmark/py/accuracy-test.py
          python benchmark/py/runtime-test.py

          # test jupyter benchmarks
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html benchmark/accuracy-test.ipynb
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html benchmark/accuracy-test-custom.ipynb
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html benchmark/accuracy-test-multiline.ipynb
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html benchmark/runtime-test.ipynb
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html benchmark/runtime-test-multiline.ipynb

          # test jupyter tools
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html tools/py/analyze_via_dataset.ipynb
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html tools/py/auto_number_grab.ipynb
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html tools/py/check_ocr_model.ipynb
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html tools/py/option_checker.ipynb
          jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html tools/py/ocr_dataset_format_checker.ipynb
      shell: bash
